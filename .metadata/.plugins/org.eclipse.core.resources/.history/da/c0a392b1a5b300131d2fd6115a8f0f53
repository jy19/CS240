package views;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;

import shared.communication.GetProjectsIn;
import shared.communication.GetProjectsOut;
import client.communication.ClientCommunicator;

@SuppressWarnings("serial")
public class SearchGUI extends JFrame{
	private FieldsPanel fields;
	private LoginPanel loginInfo;
	private HostportPanel hostport;
	private ImagePanel sampleImage;
	private ProjectsPanel projects;
	private ValuesPanel values;
	private ClientCommunicator communicator = new ClientCommunicator();
	
	public SearchGUI(String title){
		super(title);
		
		createComponents();
	}
	
	
	
	private void createComponents(){
		addWindowListener(windowAdapter);
		
		hostport = new HostportPanel();
		loginInfo = new LoginPanel(communicator);

		JPanel topPanel = new JPanel();
		topPanel.setLayout(new BorderLayout());
		topPanel.add(hostport, BorderLayout.NORTH);
		topPanel.add(loginInfo, BorderLayout.CENTER);
		
//		communicator.getHostPort(hostport.getHost(), hostport.getPort());
//		GetProjectsIn inputProjects = new GetProjectsIn(loginInfo.getUsername(), loginInfo.getPassword());
//		GetProjectsOut outputProjects = communicator.getProject(inputProjects);
		
		projects = new ProjectsPanel();
		
		JPanel middlePanel = new JPanel();
		middlePanel.setLayout(new BorderLayout());
		middlePanel.add(projects, BorderLayout.CENTER);
		
		values = new ValuesPanel();
		sampleImage = new ImagePanel();
		
		JPanel bottomLeftPanel = new JPanel();
		bottomLeftPanel.setLayout(new BorderLayout());
		bottomLeftPanel.add(values, BorderLayout.NORTH);
		bottomLeftPanel.add(sampleImage, BorderLayout.SOUTH);
		
		fields = new FieldsPanel();
		
		JPanel bottomPanel = new JPanel();
		bottomPanel.setLayout(new BorderLayout());
		bottomPanel.add(fields, BorderLayout.WEST);
		bottomPanel.add(bottomLeftPanel, BorderLayout.EAST);
		
		JPanel basePanel = new JPanel();
		basePanel.setLayout(new BoxLayout(basePanel, BoxLayout.Y_AXIS));
		basePanel.add(topPanel);
		basePanel.add(middlePanel);
		basePanel.add(bottomPanel);
		
		
		
		this.add(basePanel);
		
	}
	
	private WindowAdapter windowAdapter = new WindowAdapter() {
	    	
        public void windowClosing(WindowEvent e) {
            System.exit(0);
        }
	};
	public static void main(String[] args) {
    	
		
        EventQueue.invokeLater(new Runnable()
        {
           public void run()
           {
               SearchGUI frame = new SearchGUI("Search");
               frame.pack();
               frame.setSize(500, 500);
               frame.setVisible(true);
           }
        });
    }
	
//	public void getInfo(){
//		communicator.getHostPort(hostport.getHost(), hostport.getPort());
//		System.out.println(hostport.getHost() + " " + hostport.getPort());
//	}
}
